#!/usr/bin/env sh

##############################################################################
##
##  Gradle start up script for POSIX shells.
##
##  Generated by Gradle 8.7
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done

APP_HOME=`dirname "$PRG"`
# Make it fully qualified
APP_HOME=`cd "$APP_HOME" >/dev/null && pwd -P`

APP_NAME="Gradle"
APP_BASE_NAME=`basename "$0"`

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS="-Xmx64m -Xms64m"

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

die () {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support.
case "`uname`" in
  CYGWIN* )
    CYGWIN=true
    ;;
  Darwin* )
    DARWIN=true
    ;;
  MSYS* | MINGW* )
    MSYS_OR_MINGW=true
    ;;
  * )
    ;;
esac

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH."
fi

# Increase the maximum file descriptors if we can.
if [ "$CYGWIN" = "true" -o "$DARWIN" = "true" -o "$MSYS_OR_MINGW" = "true" ] ; then
    ulimit -n 8192 > /dev/null 2>&1
else
    ulimit -n 8192 > /dev/null 2>&1
fi

# For Cygwin or MSYS, ensure paths are in UNIX format before anything is touched.
if [ "$CYGWIN" = "true" -o "$MSYS_OR_MINGW" = "true" ] ; then
    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
    APP_HOME=`cygpath --unix "$APP_HOME"`
fi

# Escape application args
save () {
    for i do
        printf %s\\n "$i" | sed "s/'/'\\''/g"
    done
}
APP_ARGS=`save "$@"`

# Collect all arguments for the java command.
CLASSPATH=`cygpath --path --unix "$CLASSPATH" 2>/dev/null || echo "$CLASSPATH"`
JVM_OPTS="${DEFAULT_JVM_OPTS} ${JAVA_OPTS} ${GRADLE_OPTS}"

exec "$JAVACMD" $JVM_OPTS -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
